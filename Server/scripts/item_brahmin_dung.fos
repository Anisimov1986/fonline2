// Author: scypior

// Guess what.

#include "_defines.fos"
#include "_macros.fos"
#include "_msgstr.fos"
#include "_itempid.fos"
#include "_vars.fos"
//#include "npc_planes_h.fos"

//import void AddScore(Critter@ cr, uint score, uint points) from "utils";
//import void ModifyInfluenceBuffer(Critter& cr, int value) from "town";


#define TEXT	(3015)

array<string@> NormalPics = {"art\\scenery\\mstr49.frm", "art\\scenery\\mstr50.frm", "art\\scenery\\mstr51.frm", "art\\scenery\\mstr52.frm"};

void item_init(Item& item, bool firstTime)
{
	item.SetEvent(ITEM_EVENT_SKILL, "_DungSkill");
	item.SetEvent(ITEM_EVENT_WALK, "_DungWalk" );
	item.SetEvent(ITEM_EVENT_USE_ON_ME, "_UseOnDung");
	if(firstTime)
		item.PicMap = GetStrHash( NormalPics[Random(0,NormalPics.length()-1)] );
}

bool _DungSkill(Item& item, Critter& crit, int skill)
{
    crit.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, 4200);
    return true;
}
void _DungWalk(Item& item, Critter& crit, bool entered, uint8 dir)
{
    if (!crit.IsPlayer()) return;

    if (entered && Random(1, 10) == 1) // 10% chance to step into poop on ground
    {
	    if (crit.Stat[ST_AGILITY] < Random(1, 10)) // Save yourself! AG test
        {
	        if (crit.Stat[ST_LUCK] < Random(1, 10)) // LK test to see how bad it is...
            {
                crit.ToKnockout(KNOCKOUT_ANIM2_DEFAULT(Random(0,1) == 0), 4, crit.HexX, crit.HexY);
                crit.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, 4205);
            }
            else
            {
                crit.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, 4203);
            }
        }
    }
}


bool _UseOnDung(Item& item, Critter& crit, Item@ usedItem)
{
	// cleaning
	if(usedItem.GetProtoId() == PID_SHOVEL )
	{

	/*
        // A chance for pen brahmin to get angry if it's standing near the player who shovels the shit.
        // Player will be given a warning and a moment later the agitated brahmin will try to ram into the player.
        array<Critter@> critters;
        uint num = crit.GetMap().GetCrittersHex(crit.HexX, crit.HexY, 5, FIND_ONLY_NPC | FIND_LIFE, critters);
        for (uint i = 0; i < num; i++)
        {
            if (_CritHasExtMode(critters[i], MODE_EXT_PEN_BRAHMIN) && Random(0,3) == 0)
            {
		        crit.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, 4206);
                AddMiscPlane(critters[i], AI_PLANE_ATTACK_PRIORITY, 0, crit.Id, 0, "all_brahmin@plane_agitated");
                critters[i].Wait(Random(200, 500));
            }
        }
        */

		crit.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, 4204);
		// increase score

		//AddScore(crit, SCORE_EXPERT_EXCREMENT, 1);

		// check for perk
		//if(crit.GetScore(SCORE_EXPERT_EXCREMENT) > 49)
		//{
		//	crit.PerkBase[PE_EXPERT_EXCREMENT]=1;
		//}
		//crit.Say(SAY_NETMSG, ""+crit.Perk[PE_EXPERT_EXCREMENT]);
		//ModifyInfluenceBuffer(crit, 2);

	crit.StatBase[ST_EXPERIENCE] += 50;

		// check owner (pen.Id)
		if(item.Val5 != 0)
		{
#ifdef __DEBUG__
			crit.Say(SAY_NETMSG, "This brahmin crap is from pen on map: " + item.Val5);
#endif
			GameVar@ var = GetUnicumVar(UVAR_q_dung_cleaned, crit.Id, item.Val5);
			if(valid(var))
			{
				var += 1;
			}
		}
		else
		{
#ifdef __DEBUG__
			crit.Say(SAY_NETMSG, "This brahmin dung doesn't belong to anyone");
#endif
		}
		// remove dung
		DeleteItem(item);



        

		return true;
	}
	return false;
}

//
// Pays money for cleaned dung
// val - cash per shit
void r_CleaningPayment(Critter& player, Critter@ npc, int val)
{
    // IBrahminTrader@ trader = GetBrahminTrader(TRADER);

    GameVar@ var = GetUnicumVar(UVAR_q_dung_cleaned, player.Id, npc.GetMapId());

    if(valid(var) && var.GetValue() > 0)
    {
        player.AddItem(PID_BOTTLE_CAPS, 20*var.GetValue());
        var = 0;
    }
}

//
// Checks if player cleaned some crap for trader
//
bool d_CleanedSomeDung(Critter& player, Critter@ npc)
{
    // IBrahminTrader@ trader = GetBrahminTrader(TRADER);

    GameVar@ var = GetUnicumVar(UVAR_q_dung_cleaned, player.Id, npc.GetMapId());
    #ifdef __DEBUG__
    player.Say(SAY_NETMSG, "Cleaned some crap for map: " + npc.GetMapId() + "?");
    #endif
    return(valid(var) && var.GetValue() > 0);
}

#include "_macros.fos"
#include "_teams.fos"
#include "npc_common_h.fos"

#define TeamId               StatBase[ ST_TEAM_ID ]
#define SAME_TEAM # (cr,attacker) (cr.TeamId==attacker.TeamId)

void GuardInit(Critter& npc, bool firstTime)
{
	if(firstTime)
	{
		uint16[] weaponPids = {PID_LASER_RIFLE, PID_SNIPER_RIFLE, PID_AVENGER_MINIGUN, PID_ROCKET_LAUNCHER};
		InitGuard(npc,weaponPids);
	}
	AttackAttacker(npc);
}

void AttackAttacker(Critter& npc)
{
	npc.SetEvent(CRITTER_EVENT_SMTH_ATTACKED, "_SomeoneAttacked");
}

void _SomeoneAttacked(Critter& cr, Critter& attacked, Critter& attacker)
{
	// Zombie swarm.
	if (attacker.Stat[ST_TEAM_ID] == TEAM_ZombieSwarm && cr.IsSee(attacker))
	{
		Attack(cr,attacker);
		return;
	}
	if (attacked.Stat[ST_TEAM_ID] == TEAM_ZombieSwarm && cr.IsSee(attacked))
	{
		Attack(cr,attacked);
		return;
	}

	if(attacker.Id == cr.Id)
        return;
	if (SAME_TEAM(cr,attacker))
		return;
	if (!attacked.IsNpc())
		{
		if (attacker.Param[MAIN_FACTION]== 3)
			return;
		}
	if (attacker.IsNpc())
		return;

	Attack(cr,attacker);
}


void Attack(Critter& cr, Critter& attacker)
{
	NpcPlane@ plane = cr.GetCurPlane();
    if(valid(plane) && plane.Type == AI_PLANE_ATTACK && plane.Attack_TargId == attacker.Id)
		return;
	AttackCritter( cr, attacker ); 
}

void InitGuard(Critter& npc,uint16[] weaponPids)
{	
	npc.StatBase[ST_TEAM_ID] = TEAM_Respawn;
	npc.StatBase[ST_BONUS_LOOK] = 300;
	npc.StatBase[ST_REPLICATION_TIME] = 10;
	_CritSetMode(npc, MODE_NO_DROP);
	_CritSetMode(npc, MODE_NO_KNOCK);
	_CritSetMode(npc, MODE_NO_LOOSE_LIMBS);
	_CritSetMode(npc, MODE_NO_ENEMY_STACK);	
	_CritSetMode(npc, MODE_NO_LOOT);
	_CritSetMode(npc, MODE_NO_STEAL);
	_CritSetMode(npc, MODE_UNLIMITED_AMMO);
	
	
	Item@ item = npc.AddItem(weaponPids[Random(0, weaponPids.length() - 1)], 1);
	if(valid(item))
	{
		npc.SetFavoriteItem(SLOT_HAND1, item.GetProtoId());
		npc.MoveItem(item.Id, 1, SLOT_HAND1);
	}
}